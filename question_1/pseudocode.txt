
Develop a task scheduling application that helps users organise their daily activities
users should be able to add,edit and delete tasks,set priorities and deadlines and
receive reminders for upcoming tasks.Design the system to handle recurring tasks.

DEFINE taskList AS list of Task objects
Initialize taskList = []

function addTask(details, recurrenceRule=null):
    task = createTask(details)
    task.id = generateUniqueId()
    task.recurrenceRule = recurrenceRule
    task.reminders = calculateReminders(task)
    taskList.add(task)
    if recurrenceRule != null:
        generateRecurringTasks(task)
    return task.id

function editTask(taskId, updatedDetails):
    task = findTaskById(taskId)
    if task == null:
        return error
    update task with updatedDetails
    if recurrenceRule changed:
        updateRecurringTasks(task)
    task.reminders = calculateReminders(task)

function deleteTask(taskId):
    task = findTaskById(taskId)
    if task == null:
        return error
    if task.recurrenceRule != null:
        deleteRecurringInstances(taskId)
    taskList.remove(task)

function scheduleTasks():
    sortedTasks = sortTasksByPriorityAndDueDate(taskList)
    for task in sortedTasks:
        if dependenciesCompleted(task):
            assignToAvailableResource(task)

function generateRecurringTasks(task):
    nextDate = task.dueDate
    while nextDate <= task.recurrenceRule.endDate or no endDate:
        nextDate = calculateNextOccurrence(nextDate, task.recurrenceRule)
        newTask = cloneTaskWithNewDate(task, nextDate)
        taskList.add(newTask)

function sendReminders():
    currentTime = now()
    for task in taskList:
        for reminderTime in task.reminders:
            if reminderTime <= currentTime and not task.completed:
                notifyUser(task)

function markTaskCompleted(taskId):
    task = findTaskById(taskId)
    if task != null:
        task.completed = true
